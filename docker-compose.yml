version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - task-manager-network
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    container_name: task-manager-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - task-manager-network
    depends_on:
      - app

  db:
    image: postgres:15-alpine
    container_name: task-manager-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: task_manager
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - task-manager-network

  redis:
    image: redis:alpine
    container_name: task-manager-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis:/data
    networks:
      - task-manager-network

  node:
    image: node:20
    container_name: task-manager-node
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev"
    networks:
      - task-manager-network

networks:
  task-manager-network:
    driver: bridge 